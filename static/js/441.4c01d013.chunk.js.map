{"version":3,"file":"static/js/441.4c01d013.chunk.js","mappings":"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","sources":["../node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js","../node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js","components/Button/Button.js","webpack://goit-react-hw-08-phonebook/./src/components/contactForm/contactForm.module.css?5312","Redux/selectors.js","components/contactForm/contactForm.js","webpack://goit-react-hw-08-phonebook/./src/components/contactList/contactList.module.css?e2f8","components/contactList/contactList.js","components/Filter/Filter.js","../node_modules/nanoid/index.browser.js","webpack://goit-react-hw-08-phonebook/./src/pages/Home/Home.module.css?1370","pages/Home/Home.js"],"sourcesContent":["import objectWithoutPropertiesLoose from \"./objectWithoutPropertiesLoose.js\";\nexport default function _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}","export default function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}","export const Button = ({\n  selected = false,\n  type = 'button',\n  children,\n  ...otherProps\n}) => {\n  return (\n    <button type={type} {...otherProps}>\n      {children}\n    </button>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"contactForm_container__Fi-5m\",\"btn\":\"contactForm_btn__iLGf9\"};","// import { createSelector } from '@reduxjs/toolkit';\n\nexport const selectTasks = state => state.contacts.items;\n\nexport const selectStatusFilter = state => state.filters;\n\nexport const selectIsLoading = state => state.contacts.isLoading;\n\nexport const selectError = state => state.contacts.error;\n","import { useDispatch, useSelector } from 'react-redux';\nimport { Button } from 'components/Button/Button';\nimport css from './contactForm.module.css';\nimport { selectTasks } from 'Redux/selectors';\nimport { addContact } from 'Redux/operations';\n\nexport const ContactsForm = () => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectTasks);\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    const form = event.target;\n    const inputValue = form.elements.text.value;\n    const contactExists = contacts.find(\n      contact => contact.name.toLowerCase() === inputValue.toLowerCase()\n    );\n\n    if (contactExists) {\n      alert(`${inputValue} is already in contacts.`);\n      return;\n    }\n    dispatch(\n      addContact({\n        name: inputValue,\n        phone: form.elements.number.value,\n      })\n    );\n\n    form.reset();\n  };\n\n  return (\n    <>\n      <form onSubmit={handleSubmit} className={css.container}>\n        <label>Name</label>\n        <input\n          type=\"text\"\n          name=\"text\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n          // placeholder=\"Enter name...\"\n        />\n        <label>Number</label>\n        <input\n          type=\"tel\"\n          name=\"number\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n          // placeholder=\"Enter number...\"\n        />\n        <Button className={css.btn} type=\"submit\">\n          Add contact\n        </Button>\n      </form>\n    </>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"contact__list\":\"contactList_contact__list__yfr2X\",\"contact__list__item\":\"contactList_contact__list__item__LgiXv\"};","import { useSelector, useDispatch } from 'react-redux';\nimport { deleteContact } from 'Redux/operations';\nimport { selectStatusFilter, selectTasks } from '../../Redux/selectors';\nimport css from './contactList.module.css';\n\nexport const ContactList = () => {\n  const contacts = useSelector(selectTasks);\n  const filter = useSelector(selectStatusFilter).toLowerCase();\n  const dataNormalize = filter.toLowerCase();\n\n  const normalizedContacts = contacts.filter(contact =>\n    contact.name.toLowerCase().includes(dataNormalize)\n  );\n  const dispatch = useDispatch();\n  return (\n    <div>\n      <ul className={css.contact__list}>\n        {normalizedContacts.map(contact => (\n          <li key={contact.id} className={css.contact__list__item}>\n            <span>{contact.name} : </span>\n            <span>{contact.phone} </span>\n            <button\n              type=\"button\"\n              onClick={() => dispatch(deleteContact(contact.id))}\n            >\n              Delete\n            </button>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n","import { useDispatch, useSelector } from 'react-redux';\nimport { change } from '../../Redux/filtersSlice';\nimport { nanoid } from 'nanoid';\nimport { selectStatusFilter } from 'Redux/selectors';\n\nconst filterInputId = nanoid();\n\nexport const ContactFilter = () => {\n  const dispatch = useDispatch();\n\n  const filter = useSelector(selectStatusFilter);\n\n  const onChange = e => {\n    dispatch(change(e.target.value));\n  };\n\n  return (\n    <div>\n      <label htmlFor={filterInputId}>Find contacts by</label>\n      <input\n        id={filterInputId}\n        type=\"text\"\n        name=\"filter\"\n        value={filter}\n        onChange={onChange}\n      ></input>\n    </div>\n  );\n};\n","import { urlAlphabet } from './url-alphabet/index.js'\nlet random = bytes => crypto.getRandomValues(new Uint8Array(bytes))\nlet customRandom = (alphabet, defaultSize, getRandom) => {\n  let mask = (2 << (Math.log(alphabet.length - 1) / Math.LN2)) - 1\n  let step = -~((1.6 * mask * defaultSize) / alphabet.length)\n  return (size = defaultSize) => {\n    let id = ''\n    while (true) {\n      let bytes = getRandom(step)\n      let j = step\n      while (j--) {\n        id += alphabet[bytes[j] & mask] || ''\n        if (id.length === size) return id\n      }\n    }\n  }\n}\nlet customAlphabet = (alphabet, size = 21) =>\n  customRandom(alphabet, size, random)\nlet nanoid = (size = 21) => {\n  let id = ''\n  let bytes = crypto.getRandomValues(new Uint8Array(size))\n  while (size--) {\n    let byte = bytes[size] & 63\n    if (byte < 36) {\n      id += byte.toString(36)\n    } else if (byte < 62) {\n      id += (byte - 26).toString(36).toUpperCase()\n    } else if (byte < 63) {\n      id += '_'\n    } else {\n      id += '-'\n    }\n  }\n  return id\n}\nexport { nanoid, customAlphabet, customRandom, urlAlphabet, random }\n","// extracted by mini-css-extract-plugin\nexport default {\"one\":\"Home_one__5Vblw\"};","import { ContactsForm } from 'components/contactForm/contactForm';\nimport { ContactList } from 'components/contactList/contactList';\nimport { ContactFilter } from 'components/Filter/Filter';\nimport { Loader } from 'components/loader/loader';\nimport { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { fetchContacts } from 'Redux/operations';\nimport { selectError, selectIsLoading } from 'Redux/selectors';\nimport css from './Home.module.css';\n\nexport default function Home() {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(selectIsLoading);\n  const error = useSelector(selectError);\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <div className={css.one}>\n      <h1>Phonebook</h1>\n      <ContactsForm></ContactsForm>\n      <h2>Contacts</h2>\n      <ContactFilter></ContactFilter>\n      {isLoading && !error && <Loader />}\n      <ContactList />\n    </div>\n  );\n}\n"],"names":["_objectWithoutProperties","source","excluded","key","i","target","sourceKeys","Object","keys","length","indexOf","getOwnPropertySymbols","sourceSymbolKeys","prototype","propertyIsEnumerable","call","Button","selected","type","children","otherProps","selectTasks","state","contacts","items","selectStatusFilter","filters","selectIsLoading","isLoading","selectError","error","ContactsForm","dispatch","useDispatch","useSelector","onSubmit","event","preventDefault","form","inputValue","elements","text","value","find","contact","name","toLowerCase","alert","addContact","phone","number","reset","className","css","pattern","title","required","ContactList","dataNormalize","normalizedContacts","filter","includes","map","onClick","deleteContact","id","filterInputId","size","bytes","crypto","getRandomValues","Uint8Array","byte","toString","toUpperCase","nanoid","ContactFilter","htmlFor","onChange","e","change","Home","useEffect","fetchContacts"],"sourceRoot":""}